"""
Quick Test - Teste r√°pido do Legal Data Collector
"""
import asyncio
import sys
import os

# Add backend to path  
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app.services.legal_data_collector import LegalDataCollector

async def quick_test():
    """Teste r√°pido das funcionalidades principais"""
    
    print("üß™ TESTE R√ÅPIDO DO LEGAL DATA COLLECTOR")
    print("="*50)
    
    try:
        async with LegalDataCollector() as collector:
            
            # Teste 1: Verificar se consegue criar uma inst√¢ncia
            print("‚úÖ 1. Inst√¢ncia do collector criada")
            
            # Teste 2: Testar parsing de texto jur√≠dico
            sample_html = """
            <div align="justify">
                <h2>LEI N¬∫ 8.078, DE 11 DE SETEMBRO DE 1990</h2>
                <p>Art. 1¬∫ O presente c√≥digo estabelece normas de prote√ß√£o e defesa do consumidor.</p>
                <p>Art. 51. S√£o nulas de pleno direito, entre outras, as cl√°usulas contratuais relativas ao fornecimento de produtos e servi√ßos que:</p>
                <p>I - impossibilitem, exonerem ou atenuem a responsabilidade do fornecedor;</p>
            </div>
            """
            
            parsed_content = collector._parse_planalto_law(sample_html, "C√≥digo de Defesa do Consumidor")
            if "Art. 1¬∫" in parsed_content and "Art. 51" in parsed_content:
                print("‚úÖ 2. Parser de leis funcionando")
            else:
                print("‚ùå 2. Parser de leis com problema")
            
            # Teste 3: Testar limpeza de texto
            dirty_text = "    Presid√™ncia da Rep√∫blica    Casa Civil    Art. 1¬∫ Teste    Voltar ao topo    "
            clean_text = collector._clean_legal_text(dirty_text)
            if "Art. 1¬∫ Teste" in clean_text and "Presid√™ncia" not in clean_text:
                print("‚úÖ 3. Limpeza de texto funcionando")
            else:
                print("‚ùå 3. Limpeza de texto com problema")
            
            # Teste 4: Testar extra√ß√£o de palavras-chave
            keywords = collector._extract_keywords("Lei do Consumidor", "contrato fornecedor consumidor direito")
            if len(keywords) > 0 and "consumidor" in keywords:
                print("‚úÖ 4. Extra√ß√£o de keywords funcionando")
            else:
                print("‚ùå 4. Extra√ß√£o de keywords com problema")
            
            print("\\nüéâ Teste r√°pido conclu√≠do!")
            print("üí° Para teste completo, execute: python legal_bootstrap.py")
            
    except Exception as e:
        print(f"‚ùå Erro no teste: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(quick_test())